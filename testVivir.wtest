import Emociones.*

describe "Vivir" {
	//Recuerdos
	//Diarios
	
	const recuerdoAlegre = new Recuerdo(descripcion = "Si! Tengo mi unicornio",emocion = alegria)
	const recuerdoAlegre2 = new Recuerdo(emocion = alegria)
	const recuerdoTriste = new Recuerdo(emocion = tristeza)
	const recuerdoTriste2 = new Recuerdo(emocion = tristeza)
	const recuerdoEnojado = new Recuerdo(emocion = enojo)
	const recuerdoTemeroso = new Recuerdo(descripcion = "Tengo miedo mami",emocion = temor)
	const recuerdoDisgustado = new Recuerdo(emocion = disgusto)
	
	//Emociones compuestas
	const alegriaTristeza = new EmocionCompuesta(emociones = [alegria,tristeza])
	const alegriaTemor = new EmocionCompuesta(emociones = [alegria,temor])
	const recuerdoAlegriaTemor = new Recuerdo (emocion = alegriaTemor)
	const recuerdoAlegriaTristeza = new Recuerdo(emocion = alegriaTristeza)
	
	//Asentados
	const recuerdoAlegre3 = new Recuerdo(descripcion = "Me gustan mucho los unicornios de color blanco y rosa pastel",fecha = new Date(day = 1, month = 1, year = 2011) ,emocion = alegria)
	const recuerdoTriste3  = new Recuerdo(emocion = tristeza)
	const recuerdoDisgustado2  = new Recuerdo(fecha = new Date(day = 1, month = 1, year = 2010),emocion = disgusto) 	
	
	//Personas
	const riley = new Persona(felicidad = 1000,dominante = alegria,recuerdosDelDia = [recuerdoAlegre,recuerdoTriste,recuerdoTemeroso],pensamientosCentrales = [recuerdoAlegre3,recuerdoTriste3],fechaNacimiento = new Date(day=21,month=09,year=2005))
	const monica = new Persona(felicidad = 400,dominante = disgusto,fechaNacimiento = new Date().minusDays(3885)) 
	const sadAffleck = new Persona(felicidad = 1,dominante = tristeza,largoPlazo = [recuerdoAlegre,recuerdoTriste,recuerdoTemeroso],fechaNacimiento = new Date(day = 04,month = 06,year = 2005))
	const mica = new Persona(felicidad = 650,dominante = enojo,largoPlazo =[recuerdoAlegre3,recuerdoDisgustado2],fechaNacimiento = new Date(day = 5,month = 1, year= 2007))

	test "Riley vive un evento y este se agrega a los recuerdos del dia(ahora tiene 4 recuerdos)" {
		riley.vivirEvento("resolvi parcial")
		assert.equals(4, riley.recuerdosDelDia().size())
	}
	test "Riley(felicidad 1000) asienta un recuerdo alegre, este se convierte en pensamiento central"{
		riley.asentar(recuerdoAlegre2)
		assert.that(riley.tienePensamientoCentral(recuerdoAlegre2))
	}
	test "Monica(felicidad 400) asienta un recuerdo alegre, este no se convierte en pensamiento central"{
		monica.asentar(recuerdoAlegre2)
		assert.notThat(monica.tienePensamientoCentral(recuerdoAlegre2))
	}
	test "SadAffleck(felicidad 1) asienta un recuerdo triste, y este lanza una excepcion "{
		
		assert.throwsExceptionWithMessage("La persona no puede soportar la tristeza",({sadAffleck.asentar(recuerdoTriste2)}))
	}
	test "Riley asienta un recuerdo triste y le quita el 10% de la felicidad (900)"{
		riley.asentar(recuerdoTriste)
		assert.equals(900,riley.felicidad())
	}
	test "Riley asienta un recuerdo disgustado, y no ocurre nada"{
		// No hace falta probar con enojado y temeroso ya queson objecos de  la misma clase
		riley.asentar(recuerdoDisgustado)
		assert.notThat(riley.tienePensamientoCentral(recuerdoDisgustado))
	}
	test "Riley asienta un recuerdo del tipo AlegriaTemor, este se convierte en pensamiento central"{
		riley.asentar(recuerdoAlegriaTemor)
		assert.that(riley.tienePensamientoCentral(recuerdoAlegriaTemor))
	}
	test "Monica asienta un recuerdo del tipo AlegriaTristeza y le quita el 10% de la felicidad(360)"{
		monica.asentar(recuerdoAlegriaTristeza)
		assert.equals(360,monica.felicidad())
	}
	test "El  pensamiento central de alegria(recuerdoalegre) Riley es dificil de entender(Poseen mas de 10 palabras)"{
	
		assert.equals([recuerdoAlegre3],riley.centralesDificiles())
	}
	
	// Descansar
	
	test " Riley (dominante alegria) niega todo lo que no sea feliz" {
		assert.that(riley.niega(recuerdoTriste))
		assert.that(riley.niega(recuerdoDisgustado))
		assert.that(riley.niega(recuerdoEnojado))
		assert.notThat(riley.niega(recuerdoAlegriaTristeza))
		assert.notThat(riley.niega(recuerdoAlegre))
	}
	
	test "Riley asienta los recuerdos del dia:
		el recuerdo alegre se convierte en pensamiento central
		el triste le quita el 10% de la felicidad
		el temeroso no hace nada"{
		riley.agregarProcesoMental(asentamiento)
		riley.dormir()
		assert.that(riley.tienePensamientoCentral(recuerdoAlegre))
		assert.equals(900,riley.felicidad())
		}
	test "Riley asienta selectivamente todos los pensamientos relacionados con la palabra unicornio"{
		riley.agregarProcesoMental(new AsentamientoSelectivo(palabra = "unicornio"))
		riley.dormir()
		assert.that(riley.tienePensamientoCentral(recuerdoAlegre))
	}
	test "SadAffleck profundiza(dominante tristeza,recuerdo Alegre, recuerdo Triste, recuerdo Temeroso) solo el recuerdo temeroso"{
		sadAffleck.agregarProcesoMental(profundizacion)
		sadAffleck.dormir()
		assert.that(sadAffleck.tieneLargoPlazo(recuerdoTemeroso))
	}
	test "Riley profundiza el recuerdo alegre(dominante alegria,recuerdo Alegre, recuerdo Triste, recuerdo Temeroso)"{
		riley.agregarProcesoMental(profundizacion)
		riley.dormir()
		assert.that(riley.tieneLargoPlazo(recuerdoAlegre))
	}
	
	test "La restauracion Cognitiva hace que Riley quede en 1000 de felicidad"{
	
		riley.agregarProcesoMental(restauracionCognitiva)
		riley.dormir()
		assert.equals(1000,riley.felicidad())
	}
	test "La restauracion Cognitiva hace que sadAffleck tenga 101 de felicidad"{
		sadAffleck.agregarProcesoMental(restauracionCognitiva)
		sadAffleck.dormir()
		assert.equals(101,sadAffleck.felicidad())
	}

	test "El control hormonal hace perder pensamientos centrales"{
		sadAffleck.agregarProcesoMental(controlHormonal)
		sadAffleck.agregarPensamientoCentral(recuerdoAlegre3)
		sadAffleck.agregarPensamientoCentral(recuerdoTriste3)
		sadAffleck.agregarPensamientoCentral(recuerdoAlegre)
		sadAffleck.dormir()
		assert.that(sadAffleck.pensamientosCentrales().isEmpty())
	}
	
	test "Los recuerdos del dia de riley son liberados y la lista queda vacia"{
		riley.agregarProcesoMental(liberacionDeRecuerdos)
		riley.dormir()
		assert.that(riley.recuerdosDelDia().isEmpty())
	}
	// Rememorar
	test "Mica tiene un dejavu con el recuerdo alegre ya asentado" {
	 	mica.pensamientoActual(recuerdoAlegre3)
	 	assert.that(mica.dejaVu())
	}
	test "Mica rememora algo"{
		mica.rememorar()
		assert.equals(recuerdoAlegre3, mica.pensamientoActual())
	}


}
